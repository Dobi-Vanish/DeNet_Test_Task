{
    "swagger": "2.0",
    "info": {
        "description": "API for user rewards management system",
        "title": "Reward Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/authenticate": {
            "post": {
                "description": "Logs in user and returns auth cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/calltypes.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/calltypes.JSONResponse"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "refreshToken"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/calltypes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/registrate": {
            "post": {
                "description": "Creates new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/calltypes.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/calltypes.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/calltypes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/leaderboard": {
            "get": {
                "description": "Returns all users ordered by score",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user leaderboard",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/calltypes.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/calltypes.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Failed to fetch users",
                        "schema": {
                            "$ref": "#/definitions/calltypes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/kuarhodron": {
            "post": {
                "description": "Complete secret task with special password",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Secret task endpoint",
                "parameters": [
                    {
                        "description": "Secret password",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/calltypes.SecretTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/calltypes.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid password",
                        "schema": {
                            "$ref": "#/definitions/calltypes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/referrer": {
            "post": {
                "description": "Applies referrer code to user account. Those, who entered the referrer is granted by 100 points, those, whom referrer were redeemed, claims 25 points.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Redeem referrer code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Referrer code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/calltypes.ReferrerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/calltypes.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid referrer code",
                        "schema": {
                            "$ref": "#/definitions/calltypes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/status": {
            "get": {
                "description": "Returns single user data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/calltypes.JSONResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/calltypes.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/calltypes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/task/XSign": {
            "post": {
                "description": "Awards points to user for completing task",
                "tags": [
                    "Tasks"
                ],
                "summary": "Completes X sign task and earn points",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Points to award",
                        "name": "points",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/calltypes.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Failed to add points",
                        "schema": {
                            "$ref": "#/definitions/calltypes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/task/complete": {
            "post": {
                "description": "Awards points to user for completing task",
                "tags": [
                    "Tasks"
                ],
                "summary": "Complete task and earn points",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Points to award",
                        "name": "points",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/calltypes.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Failed to add points",
                        "schema": {
                            "$ref": "#/definitions/calltypes.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/task/telegramSign": {
            "post": {
                "description": "Awards points to user for completing task",
                "tags": [
                    "Tasks"
                ],
                "summary": "Completes Telegram sign task and earn points",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Points to award",
                        "name": "points",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/calltypes.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Failed to add points",
                        "schema": {
                            "$ref": "#/definitions/calltypes.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "calltypes.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Error description"
                }
            }
        },
        "calltypes.JSONResponse": {
            "description": "API response.",
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "calltypes.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "securePassword123"
                }
            }
        },
        "calltypes.ReferrerRequest": {
            "type": "object",
            "properties": {
                "referrer": {
                    "type": "string",
                    "example": "ref123"
                }
            }
        },
        "calltypes.RegisterRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "securePassword123"
                },
                "referrer": {
                    "type": "string",
                    "example": "ref123"
                },
                "score": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "calltypes.SecretTaskRequest": {
            "type": "object",
            "properties": {
                "waterPassword": {
                    "type": "string",
                    "example": "KUARHODRON"
                }
            }
        },
        "calltypes.User": {
            "description": "info about user.",
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "referrer": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}